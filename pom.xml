<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.geoserver.rest</groupId>
  <artifactId>geoserver-rest-client</artifactId>
  <version>2.19-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>OpenAPI GeoServer REST config client</name>

  <properties>
    <java.version>1.8</java.version>
    <spring-boot.version>1.5.19.RELEASE</spring-boot.version>
    <openapi-generator-maven-plugin.version>4.3.1</openapi-generator-maven-plugin.version>
    <mapstruct.version>1.4.1.Final</mapstruct.version>

    <lombok.version>1.18.12</lombok.version>
    <guava.version>28.2-jre</guava.version>
    <feign-form-version>3.7.0</feign-form-version>
    <feign-version>10.2.0</feign-version>
    <jackson-databind-nullable-version>0.2.0</jackson-databind-nullable-version>
    <jackson-databind-version>2.8.11.2</jackson-databind-version>
    <jackson-version>2.8.11</jackson-version>
    <swagger-annotations.version>1.5.21</swagger-annotations.version>

    <oltu-version>1.0.2</oltu-version>
    <!-- org.geoserver.restconfig.model.catalog org.geoserver.restconfig.model.config org.geoserver.restconfig.api.v1.model 
      org.geoserver.restconfig.api.v1.client -->
    <openapi-base-folder>${project.basedir}/src/main/resources/api/1.0.0/OAS3.0</openapi-base-folder>

    <openapi.api.v1>${openapi.basepackage}.api.v1</openapi.api.v1>
    <openapi.api.v1.client>${openapi.api.v1}.client</openapi.api.v1.client>
    <openapi.api.v1.model>${openapi.api.v1}.model</openapi.api.v1.model>
    <openapi.basepackage>org.geoserver.restconfig</openapi.basepackage>
    <openapi.model.catalog>${openapi.basepackage}.model.catalog</openapi.model.catalog>
    <openapi.model.config>${openapi.basepackage}.model.config</openapi.model.config>

  </properties>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.3.1</version>
      </dependency>
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>
    <!-- @Nullable annotation -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>3.0.2</version>
    </dependency>
    <!-- HTTP client: Netflix Feign -->
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-core</artifactId>
      <version>${feign-version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-jackson</artifactId>
      <version>${feign-version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign</groupId>
      <artifactId>feign-slf4j</artifactId>
      <version>${feign-version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.openfeign.form</groupId>
      <artifactId>feign-form</artifactId>
      <version>${feign-form-version}</version>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.openapitools</groupId>
      <artifactId>jackson-databind-nullable</artifactId>
      <version>0.1.0</version>
    </dependency>

    <!-- JSON processing: jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.client</artifactId>
      <version>${oltu-version}</version>
    </dependency>

    <!-- test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-logging</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct-processor</artifactId>
            <version>${mapstruct.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
          <generatedSourcesDirectory>${project.build.directory}/generated-sources/mapstruct</generatedSourcesDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>generate-catalog-model</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/catalog.yaml</inputSpec>
              <configurationFile>${project.basedir}/catalog-model-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-config-model</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/config.yaml</inputSpec>
              <configurationFile>${project.basedir}/config-model-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-api-model</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/catalogresponses.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateApis>false</generateApis>
              <generateSupportingFiles>true</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-manifests-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/manifests.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-settings-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/settings.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-workspaces-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/workspaces.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-namespaces-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/namespaces.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-datastores-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/datastores.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-coveragestores-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/coveragestores.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-featuretypes-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/featuretypes.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-coverages-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/coverages.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
          <execution>
            <id>generate-layers-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/layers.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <generateApiDocumentation>false</generateApiDocumentation>
              <generateModelDocumentation>false</generateModelDocumentation>
            </configuration>
          </execution>
          <execution>
            <id>generate-styles-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/styles.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateSupportingFiles>false</generateSupportingFiles>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
              <generateApiDocumentation>false</generateApiDocumentation>
              <generateModelDocumentation>false</generateModelDocumentation>
            </configuration>
          </execution>
          <execution>
            <id>generate-owsservices-api</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <generatorName>java</generatorName>
              <inputSpec>${openapi-base-folder}/owsservices.yaml</inputSpec>
              <configurationFile>${project.basedir}/client-api-config.json</configurationFile>
              <generateModelTests>false</generateModelTests>
              <generateApiTests>false</generateApiTests>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/openapi/src</source>
                <source>${project.build.directory}/generated-sources/mapstruct</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>ci</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.dkanejs.maven.plugins</groupId>
            <artifactId>docker-compose-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
